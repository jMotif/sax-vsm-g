dev.off()
plot(x=data$"FastShapelet",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="Fast Shapelets vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"FastShapelet",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.5, y=0.05, "Our method wins")
text(x=0.15, y=0.75, "FastShapelets wins",cex=1.5)
#
require(ggplot2)
require(Cairo)
#
data=data.frame(read.table("paper/datainpaper/accuracy.csv",header=T,as.is=T))
names(data) <- c("N","Dataset","1NN.Euclidean","1NN.DTW","SAX.VSM","FastShapelet","PatternsSelection")
CairoPDF(file = "accuracy_plots",
width = 10, height = 3.5, onefile = TRUE, family = "Helvetica",
title = "R Graphics Output", fonts = NULL, version = "1.1",
paper = "special")
par(mfrow=c(1,3))
plot(x=data$"1NN.DTW",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="1NN DTW vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"1NN.DTW",y=data$"PatternsSelection",pch=16,col="brown1")
text(x=0.5, y=0.05, "Our method wins",cex=1.5)
text(x=0.15, y=0.75, "1NN DTW wins",cex=1.5)
plot(x=data$"SAX.VSM",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="SAX-VSM vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"SAX.VSM",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.5, y=0.05, "Our method wins",cex=1.5)
text(x=0.15, y=0.75, "SAX-VSM wins",cex=1.5)
plot(x=data$"FastShapelet",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="Fast Shapelets vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"FastShapelet",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.5, y=0.05, "Our method wins",cex=1.5)
text(x=0.15, y=0.75, "FastShapelets wins",cex=1.5)
dev.off()
#
require(ggplot2)
require(Cairo)
#
data=data.frame(read.table("paper/datainpaper/accuracy.csv",header=T,as.is=T))
names(data) <- c("N","Dataset","1NN.Euclidean","1NN.DTW","SAX.VSM","FastShapelet","PatternsSelection")
CairoPDF(file = "accuracy_plots",
width = 10, height = 3.5, onefile = TRUE, family = "Helvetica",
title = "R Graphics Output", fonts = NULL, version = "1.1",
paper = "special")
par(mfrow=c(1,3))
plot(x=data$"1NN.DTW",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="1NN DTW vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"1NN.DTW",y=data$"PatternsSelection",pch=16,col="brown1")
text(x=0.5, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "1NN DTW wins",cex=1.5)
plot(x=data$"SAX.VSM",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="SAX-VSM vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"SAX.VSM",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.5, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "SAX-VSM wins",cex=1.5)
plot(x=data$"FastShapelet",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="Fast Shapelets vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"FastShapelet",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.5, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "FastShapelets wins",cex=1.5)
dev.off()
#
require(ggplot2)
require(Cairo)
#
data=data.frame(read.table("paper/datainpaper/accuracy.csv",header=T,as.is=T))
names(data) <- c("N","Dataset","1NN.Euclidean","1NN.DTW","SAX.VSM","FastShapelet","PatternsSelection")
CairoPDF(file = "accuracy_plots",
width = 10, height = 3.5, onefile = TRUE, family = "Helvetica",
title = "R Graphics Output", fonts = NULL, version = "1.1",
paper = "special")
par(mfrow=c(1,3))
plot(x=data$"1NN.DTW",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="1NN DTW vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"1NN.DTW",y=data$"PatternsSelection",pch=16,col="brown1")
text(x=0.5, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "1NN DTW wins",cex=1.5)
plot(x=data$"SAX.VSM",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="SAX-VSM vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"SAX.VSM",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.5, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "SAX-VSM wins",cex=1.5)
plot(x=data$"FastShapelet",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="Fast Shapelets vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"FastShapelet",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.5, y=0.05, "Our method wins",cex=1.5)
text(x=0.25, y=0.75, "FastShapelets wins",cex=1.5)
dev.off()
#
require(ggplot2)
require(Cairo)
#
data=data.frame(read.table("paper/datainpaper/accuracy.csv",header=T,as.is=T))
names(data) <- c("N","Dataset","1NN.Euclidean","1NN.DTW","SAX.VSM","FastShapelet","PatternsSelection")
CairoPDF(file = "accuracy_plots",
width = 10, height = 3.5, onefile = TRUE, family = "Helvetica",
title = "R Graphics Output", fonts = NULL, version = "1.1",
paper = "special")
par(mfrow=c(1,3))
plot(x=data$"1NN.DTW",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="1NN DTW vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"1NN.DTW",y=data$"PatternsSelection",pch=16,col="brown1")
text(x=0.6, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "1NN DTW wins",cex=1.5)
plot(x=data$"SAX.VSM",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="SAX-VSM vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"SAX.VSM",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.6, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "SAX-VSM wins",cex=1.5)
plot(x=data$"FastShapelet",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="Fast Shapelets vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"FastShapelet",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.6, y=0.05, "Our method wins",cex=1.5)
text(x=0.25, y=0.75, "FastShapelets wins",cex=1.5)
dev.off()
#
require(ggplot2)
require(Cairo)
#
data=data.frame(read.table("paper/datainpaper/accuracy.csv",header=T,as.is=T))
names(data) <- c("N","Dataset","1NN.Euclidean","1NN.DTW","SAX.VSM","FastShapelet","PatternsSelection")
CairoPDF(file = "accuracy_plots",
width = 10, height = 3.5, onefile = TRUE, family = "Helvetica",
title = "R Graphics Output", fonts = NULL, version = "1.1",
paper = "special")
par(mfrow=c(1,3))
plot(x=data$"1NN.DTW",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="1NN DTW vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"1NN.DTW",y=data$"PatternsSelection",pch=16,col="brown1")
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "1NN DTW wins",cex=1.5)
plot(x=data$"SAX.VSM",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="SAX-VSM vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"SAX.VSM",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "SAX-VSM wins",cex=1.5)
plot(x=data$"FastShapelet",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="Fast Shapelets vs Pattern Selection")
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"FastShapelet",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.25, y=0.75, "FastShapelets wins",cex=1.5)
dev.off()
plot(x=data$"1NN.DTW",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="1NN DTW vs Pattern Selection",cex=1.5)
par(mfrow=c(1,3))
plot(x=data$"1NN.DTW",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="1NN DTW vs Pattern Selection",cex=5)
#
require(ggplot2)
require(Cairo)
#
data=data.frame(read.table("paper/datainpaper/accuracy.csv",header=T,as.is=T))
names(data) <- c("N","Dataset","1NN.Euclidean","1NN.DTW","SAX.VSM","FastShapelet","PatternsSelection")
CairoPDF(file = "accuracy_plots",
width = 10, height = 3.5, onefile = TRUE, family = "Helvetica",
title = "R Graphics Output", fonts = NULL, version = "1.1",
paper = "special")
par(mfrow=c(1,3))
plot(x=data$"1NN.DTW",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="1NN DTW vs Pattern Selection",cex.main=1.5)
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"1NN.DTW",y=data$"PatternsSelection",pch=16,col="brown1")
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "1NN DTW wins",cex=1.5)
plot(x=data$"SAX.VSM",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="SAX-VSM vs Pattern Selection",cex.main=1.5)
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"SAX.VSM",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "SAX-VSM wins",cex=1.5)
plot(x=data$"FastShapelet",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="Fast Shapelets vs Pattern Selection",cex.main=1.5)
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"FastShapelet",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.25, y=0.75, "FastShapelets wins",cex=1.5)
dev.off()
#
require(ggplot2)
require(Cairo)
#
data=data.frame(read.table("paper/datainpaper/accuracy.csv",header=T,as.is=T))
names(data) <- c("N","Dataset","1NN.Euclidean","1NN.DTW","SAX.VSM","FastShapelet","PatternsSelection")
CairoPDF(file = "accuracy_plots",
width = 10, height = 3.5, onefile = TRUE, family = "Helvetica",
title = "R Graphics Output", fonts = NULL, version = "1.1",
paper = "special")
par(mfrow=c(1,3))
plot(x=data$"1NN.DTW",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="1NN DTW vs Pattern Selection",cex.main=2)
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"1NN.DTW",y=data$"PatternsSelection",pch=16,col="brown1")
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "1NN DTW wins",cex=1.5)
plot(x=data$"SAX.VSM",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="SAX-VSM vs Pattern Selection",cex.main=2)
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"SAX.VSM",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "SAX-VSM wins",cex=1.5)
plot(x=data$"FastShapelet",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="Fast Shapelets vs Pattern Selection",cex.main=1.5)
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"FastShapelet",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.56, y=0.05, "Our method wins",cex=2)
text(x=0.25, y=0.75, "FastShapelets wins",cex=1.5)
dev.off()
#
require(ggplot2)
require(Cairo)
#
data=data.frame(read.table("paper/datainpaper/accuracy.csv",header=T,as.is=T))
names(data) <- c("N","Dataset","1NN.Euclidean","1NN.DTW","SAX.VSM","FastShapelet","PatternsSelection")
CairoPDF(file = "accuracy_plots",
width = 10, height = 3.5, onefile = TRUE, family = "Helvetica",
title = "R Graphics Output", fonts = NULL, version = "1.1",
paper = "special")
par(mfrow=c(1,3))
plot(x=data$"1NN.DTW",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="1NN DTW vs Pattern Selection",cex.main=1.8)
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"1NN.DTW",y=data$"PatternsSelection",pch=16,col="brown1")
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "1NN DTW wins",cex=1.5)
plot(x=data$"SAX.VSM",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="SAX-VSM vs Pattern Selection",cex.main=1.8)
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"SAX.VSM",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "SAX-VSM wins",cex=1.5)
plot(x=data$"FastShapelet",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="Fast Shapelets vs Pattern Selection",cex.main=1.8)
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"FastShapelet",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.25, y=0.75, "FastShapelets wins",cex=1.5)
dev.off()
#
require(ggplot2)
require(Cairo)
#
data=data.frame(read.table("paper/datainpaper/accuracy.csv",header=T,as.is=T))
names(data) <- c("N","Dataset","1NN.Euclidean","1NN.DTW","SAX.VSM","FastShapelet","PatternsSelection")
CairoPDF(file = "accuracy_plots",
width = 10, height = 3.5, onefile = TRUE, family = "Helvetica",
title = "R Graphics Output", fonts = NULL, version = "1.1",
paper = "special")
par(mfrow=c(1,3))
plot(x=data$"1NN.DTW",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="1NN DTW vs Pattern Selection",cex.main=1.6)
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"1NN.DTW",y=data$"PatternsSelection",pch=16,col="brown1")
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "1NN DTW wins",cex=1.5)
plot(x=data$"SAX.VSM",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="SAX-VSM vs Pattern Selection",cex.main=1.6)
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"SAX.VSM",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "SAX-VSM wins",cex=1.5)
plot(x=data$"FastShapelet",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="Fast Shapelets vs Pattern Selection",cex.main=1.6)
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"FastShapelet",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.25, y=0.75, "FastShapelets wins",cex=1.5)
dev.off()
#
require(ggplot2)
require(Cairo)
#
data=data.frame(read.table("paper/datainpaper/accuracy.csv",header=T,as.is=T))
names(data) <- c("N","Dataset","1NN.Euclidean","1NN.DTW","SAX.VSM","FastShapelet","PatternsSelection")
CairoPDF(file = "accuracy_plots",
width = 10, height = 3.5, onefile = TRUE, family = "Helvetica",
title = "R Graphics Output", fonts = NULL, version = "1.1",
paper = "special")
par(mfrow=c(1,3))
plot(x=data$"1NN.DTW",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="1NN DTW vs PatternsSelection",cex.main=1.6)
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"1NN.DTW",y=data$"PatternsSelection",pch=16,col="brown1")
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "1NN DTW wins",cex=1.5)
plot(x=data$"SAX.VSM",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="SAX-VSM vs PatternsSelection",cex.main=1.6)
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"SAX.VSM",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.2, y=0.75, "SAX-VSM wins",cex=1.5)
plot(x=data$"FastShapelet",y=data$"PatternsSelection",xlim=c(0, 0.8), ylim=c(0, 0.8),
xlab="", ylab="",pch=16,col="brown1",
main="FastShapelets vs PatternsSelection",cex.main=1.6)
positions <- data.frame(x=c(-1,1,1),y=c(-1,1,-1))
polygon(positions$x, positions$y, col = alpha("cyan", 0.5), border=NA)
points(x=data$"FastShapelet",y=data$"PatternsSelection",pch=16,col="brown1",)
text(x=0.56, y=0.05, "Our method wins",cex=1.5)
text(x=0.25, y=0.75, "FastShapelets wins",cex=1.5)
dev.off()
?sys.glob
?Sys.glob
?list.files
?paste
?list.files
?write.table
?daply
library(plyr)
?daply
?ddply
?apply
?do.call
library(LPStimeSeries)
data(GunPoint)
set.seed(71)
## Learn patterns on GunPoint training series with default parameters
ensemble=learnPattern(GunPoint$trainseries)
print(ensemble)
## Find the similarity between test and training series based on the learned model
similarity=computeSimilarity(ensemble,GunPoint$testseries,GunPoint$trainseries)
## Find the index of 1 nearest neighbor (1NN) training series for each test series
NearestNeighbor=apply(similarity,1,which.min)
## Predicted class for each test series
predicted=GunPoint$trainclass[NearestNeighbor]
## Compute the percentage of accurate predictions
accuracy=sum(predicted==GunPoint$testclass)/nrow(GunPoint$testseries)
print(100*accuracy)
?learnPattern
dat=read.table("../data/Beef/Beef_TRAIN")
View(dat)
class=as.numeric(dat[,1])
dat=read.table("../data/Beef/Beef_TRAIN")
trainclass=as.numeric(dat[,1])
trainseries=as.matrix(dat[,-1])
dat=read.table("../data/Beef/Beef_TEST")
testclass=as.numeric(dat[,1])
testseries=as.matrix(dat[,-1])
beef=list(trainseries,trainclass,testseries,testclass)
ensemble=learnPattern(beef$trainseries)
dat=read.table("../data/Beef/Beef_TRAIN")
trainclass=as.numeric(dat[,1])
trainseries=matrix(unlist(dat[,-1]),byrow=T,ncol=470)
dat=read.table("../data/Beef/Beef_TEST")
testclass=as.numeric(dat[,1])
testseries=matrix(unlist(dat[,-1]),byrow=T,ncol=470)
beef=list(trainseries,trainclass,testseries,testclass)
ensemble=learnPattern(beef$trainseries)
dat=read.table("../data/Beef/Beef_TRAIN")
View(dat)
trainclass=as.numeric(dat[,1])
trainseries=matrix(unlist(dat[,-1]),byrow=T,ncol=470)
View(trainseries)
colnames(trainseries)<-NULL
View(trainseries)
View(trainseries)
beef=list('trainseries'=trainseries,trainclass,testseries,testclass)
beef=list('trainseries'=trainseries,'trainclass'=trainclass,'testseries'=testseries,'testclass'=testclass)
ensemble=learnPattern(beef$trainseries)
print(ensemble)
similarity=computeSimilarity(ensemble,GunPoint$testseries,GunPoint$trainseries)
NearestNeighbor=apply(similarity,1,which.min)
predicted=GunPoint$trainclass[NearestNeighbor]
accuracy=sum(predicted==GunPoint$testclass)/nrow(GunPoint$testseries)
print(100*accuracy)
similarity=computeSimilarity(ensemble,GunPoint$testseries,GunPoint$trainseries)
similarity
dat=read.table("../data/Beef/Beef_TRAIN")
trainclass=as.numeric(dat[,1])
trainseries=matrix(unlist(dat[,-1]),byrow=T,ncol=470)
dat=read.table("../data/Beef/Beef_TEST")
testclass=as.numeric(dat[,1])
testseries=matrix(unlist(dat[,-1]),byrow=T,ncol=470)
beef=list('trainseries'=trainseries,'trainclass'=trainclass,'testseries'=testseries,'testclass'=testclass)
ensemble=learnPattern(beef$trainseries)
print(ensemble)
similarity=computeSimilarity(ensemble,GunPoint$testseries,GunPoint$trainseries)
NearestNeighbor=apply(similarity,1,which.min)
predicted=GunPoint$trainclass[NearestNeighbor]
accuracy=sum(predicted==GunPoint$testclass)/nrow(GunPoint$testseries)
print(100*accuracy)
dat=read.table("../data/Beef/Beef_TRAIN")
trainclass=as.numeric(dat[,1])
trainseries=matrix(unlist(dat[,-1]),byrow=T,ncol=470)
dat=read.table("../data/Beef/Beef_TEST")
testclass=as.numeric(dat[,1])
testseries=matrix(unlist(dat[,-1]),byrow=T,ncol=470)
beef=list('trainseries'=trainseries,'trainclass'=trainclass,'testseries'=testseries,'testclass'=testclass)
ensemble=learnPattern(beef$trainseries)
print(ensemble)
similarity=computeSimilarity(ensemble,GunPoint$testseries,GunPoint$trainseries)
NearestNeighbor=apply(similarity,1,which.min)
predicted=GunPoint$trainclass[NearestNeighbor]
accuracy=sum(predicted==GunPoint$testclass)/nrow(GunPoint$testseries)
print(100*accuracy)
dat=read.table("../data/Beef/Beef_TRAIN")
trainclass=as.numeric(dat[,1])
trainseries=matrix(unlist(dat[,-1]),byrow=T,ncol=470)
dat=read.table("../data/Beef/Beef_TEST")
testclass=as.numeric(dat[,1])
testseries=matrix(unlist(dat[,-1]),byrow=T,ncol=470)
beef=list('trainseries'=trainseries,'trainclass'=trainclass,'testseries'=testseries,'testclass'=testclass)
ensemble=learnPattern(beef$trainseries)
print(ensemble)
similarity=computeSimilarity(ensemble,GunPoint$testseries,GunPoint$trainseries)
NearestNeighbor=apply(similarity,1,which.min)
predicted=GunPoint$trainclass[NearestNeighbor]
accuracy=sum(predicted==GunPoint$testclass)/nrow(GunPoint$testseries)
print(100*accuracy)
dat=read.table("../data/Beef/Beef_TRAIN")
trainclass=as.numeric(dat[,1])
trainseries=matrix(unlist(dat[,-1]),byrow=T,ncol=470)
dat=read.table("../data/Beef/Beef_TEST")
testclass=as.numeric(dat[,1])
testseries=matrix(unlist(dat[,-1]),byrow=T,ncol=470)
beef=list('trainseries'=trainseries,'trainclass'=trainclass,'testseries'=testseries,'testclass'=testclass)
ensemble=learnPattern(beef$trainseries)
print(ensemble)
similarity=computeSimilarity(ensemble,GunPoint$testseries,GunPoint$trainseries)
NearestNeighbor=apply(similarity,1,which.min)
predicted=GunPoint$trainclass[NearestNeighbor]
accuracy=sum(predicted==GunPoint$testclass)/nrow(GunPoint$testseries)
print(100*accuracy)
dat=read.table("../data/Beef/Beef_TRAIN")
trainclass=as.numeric(dat[,1])
trainseries=matrix(unlist(dat[,-1]),byrow=T,ncol=470)
dat=read.table("../data/Beef/Beef_TEST")
testclass=as.numeric(dat[,1])
testseries=matrix(unlist(dat[,-1]),byrow=T,ncol=470)
beef=list('trainseries'=trainseries,'trainclass'=trainclass,'testseries'=testseries,'testclass'=testclass)
ensemble=learnPattern(beef$trainseries)
print(ensemble)
similarity=computeSimilarity(ensemble,beef$testseries,beef$trainseries)
NearestNeighbor=apply(similarity,1,which.min)
predicted=beef$trainclass[NearestNeighbor]
accuracy=sum(predicted==beef$testclass)/nrow(beef$testseries)
print(100*accuracy)
