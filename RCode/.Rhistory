data=cbind(data,res[,2])
View(data)
str_match("processing paramleters: [CBF/CBF", dataset)
data = read.csv("../res/auto_0x05.txt",header=F,sep="#",as.is=T)
str(data)
res=aaply(data,1,function(x) {str_match(unlist(x), dataset)} )
data=cbind(data,res[,2])
View(data)
data = read.csv("../res/auto_0x05.txt",header=F,sep="#",as.is=T)
str(data)
res=aaply(data,1,function(x) {str_match(as.character(x), dataset)} )
data=cbind(data,res[,2])
View(data)
dataset <- "paramleters: \\[([A-Z|a-z|0-9]+)\\/"
str_match("processing paramleters: [CBF/CBF", dataset)
res=aaply(data,1,function(x) {str_match(as.character(x), dataset)} )
data = read.csv("../res/auto_0x05.txt",header=F,sep="#",as.is=T)
str(data)
res=aaply(data,1,function(x) {str_match(as.character(x), dataset)} )
data=cbind(data,res[,2])
View(data)
data = read.csv("../res/errors.txt",header=F,sep="#",as.is=T)
str(data)
data = read.csv("../res/errors.txt",header=F,sep=" ",as.is=T)
str(data)
View(data)
saxvsm=dat[data$V1="SAXVSMContinuousDirectSampler"]
saxvsm=dat[data$V1="SAXVSMContinuousDirectSampler",]
saxvsm=dat[data$V1=="SAXVSMContinuousDirectSampler",]
saxvsm=data[data$V1=="SAXVSMContinuousDirectSampler",]
View(data)
saxvsmg=data[data$V1=="SAXVSMContinuousGrammarSampler",]
saxvsm = saxvsm[with(saxvsm, order(-V1)), ]
View(saxvsm)
saxvsm = saxvsm[with(saxvsm, order(-"V1")), ]
saxvsm = saxvsm[with(saxvsm, order("V1")), ]
View(saxvsm)
saxvsm=data[data$V1=="SAXVSMContinuousDirectSampler",]
saxvsm = saxvsm[with(saxvsm, order("V1")), ]
saxvsm=data[data$V1=="SAXVSMContinuousDirectSampler",]
saxvsm = saxvsm[ order(saxvsm$V1), ]
View(saxvsm)
saxvsm = saxvsm[ order(saxvsm$V2), -1]
View(saxvsm)
save.table("../res/errors_sax_vsm.txt",row.names=F,col.names=F)
write.table("../res/errors_sax_vsm.txt",row.names=F,col.names=F)
write.table("../res/errors_sax_vsm.txt",row.names=F,col.names=F)
?write.table
write.table(saxvsm,"../res/errors_sax_vsm.txt",row.names=F,col.names=F)
datasets=read.csv("../res/datasets.txt",header=F,sep=" ",as.is=T)
names(datasets)=c("dataset","classes","train_size","test_size","length","error_euclidean","error_dtw")
tmp = read.csv("../res/errors_sax_vsm.txt",header=F,sep=" ",as.is=T)
names(tmp)=c("dataset","classic","exact","nored")
data=merge(datasets,tmp,by.x=c("dataset"),by.y=c("dataset"),all=T)
View(data)
datasets=read.csv("../res/datasets.txt",header=F,sep=" ",as.is=T)
names(datasets)=c("dataset","classes","train_size","test_size","length","error_euclidean","error_dtw")
tmp = read.csv("../res/errors_sax_vsm.txt",header=F,sep=" ",as.is=T)
names(tmp)=c("dataset","classic","exact","nored")
data=merge(datasets,tmp,by.x=c("dataset"),by.y=c("dataset"),all=T)
View(data)
datasets=read.csv("../res/datasets.txt",header=F,sep=" ",as.is=T)
names(datasets)=c("dataset","classes","train_size","test_size","length","error_euclidean","error_dtw")
tmp = read.csv("../res/errors_sax_vsm.txt",header=F,sep=" ",as.is=T)
names(tmp)=c("dataset","classic","exact","nored")
data=merge(datasets,tmp,by.x=c("dataset"),by.y=c("dataset"),all=T)
View(data)
tmp2 = read.csv("../res/errors_sax_vsm-g.txt",header=F,sep=" ",as.is=T)
names(tmp)=c("dataset","classic","exact","nored")
names(tmp2)=c("dataset","classic","exact","nored")
tmp2 = tmp2[ order(tmp2$dataset), -1]
View(tmp2)
tmp2 = read.csv("../res/errors_sax_vsm-g.txt",header=F,sep=" ",as.is=T)
names(tmp2)=c("dataset","classic","exact","nored")
tmp2 = tmp2[ order(tmp2$dataset),]
View(tmp2)
tmp2 = read.csv("../res/errors_sax_vsm-g.txt",header=F,sep=" ",as.is=T)
names(tmp2)=c("dataset","classic","exact","nored")
View(tmp2)
tmp2 = read.csv("../res/errors_sax_vsm-g.txt",header=F,sep=" ",as.is=T)
names(tmp2)=c("dataset","classic","exact","nored")
data=merge(data,tmp2,by.x=c("dataset"),by.y=c("dataset"),all=T)
View(data)
tmp = read.csv("../res/errors_sax_vsm.txt",header=F,sep=" ",as.is=T)
names(tmp)=c("dataset","classic","exact","nored")
sax_vsm = apply(tmp,2,min)
sax_vsm = apply(tmp,1,min)
sax_vsm = t(apply(tmp,1,min))
View(sax_vsm)
sax_vsm = cbind(tmp$dataset, t(apply(tmp[,2:4],1,min))
)
sax_vsm = cbind(tmp$dataset, t(t(apply(tmp[,2:4],1,min))))
View(sax_vsm)
tmp = read.csv("../res/errors_sax_vsm.txt",header=F,sep=" ",as.is=T)
names(tmp)=c("dataset","classic","exact","nored")
sax_vsm = cbind(tmp$dataset, t(t(apply(tmp[,2:4],1,min))))
names(sax_vsm)=c("dataset","error")
tmp2 = read.csv("../res/errors_sax_vsm-g.txt",header=F,sep=" ",as.is=T)
names(tmp2)=c("dataset","classic","exact","nored")
sax_vsm-g = cbind(tmp2$dataset, t(t(apply(tmp2[,2:4],1,min))))
tmp2 = read.csv("../res/errors_sax_vsm-g.txt",header=F,sep=" ",as.is=T)
names(tmp2)=c("dataset","classic","exact","nored")
sax_vsm_g = cbind(tmp2$dataset, t(t(apply(tmp2[,2:4],1,min))))
names(sax_vsm_g)=c("dataset","error")
data=merge(datasets,sax_vsm,by.x=c("dataset"),by.y=c("dataset"),all=T)
View(sax_vsm)
sax_vsm = cbind(tmp$dataset, t(t(apply(tmp[,2:4],1,min))))
names(sax_vsm)=c("dataset","error")
View(sax_vsm)
tmp = read.csv("../res/errors_sax_vsm.txt",header=F,sep=" ",as.is=T)
names(tmp)=c("dataset","classic","exact","nored")
sax_vsm = data frame(dataset=tmp$dataset, error=apply(tmp[,2:4],1,min)))
sax_vsm = data.frame(dataset=tmp$dataset, error=apply(tmp[,2:4],1,min)))
sax_vsm = data.frame(dataset=tmp$dataset, error=apply(tmp[,2:4],1,min))
View(sax_vsm)
sax_vsm_g = data.frame(dataset=tmp2$dataset, error=apply(tmp2[,2:4],1,min))
tmp2 = read.csv("../res/errors_sax_vsm-g.txt",header=F,sep=" ",as.is=T)
names(tmp2)=c("dataset","classic","exact","nored")
sax_vsm_g = data.frame(dataset=tmp2$dataset, error=apply(tmp2[,2:4],1,min))
data=merge(datasets,sax_vsm,by.x=c("dataset"),by.y=c("dataset"),all=T)
data=merge(data,sax_vsm_g,by.x=c("dataset"),by.y=c("dataset"),all=T)
View(data)
?merge
write.table(data,"../res/summary.txt",row.names=F,col.names=T)
dat1=rep(1.0,30)
dat2=rep(1.0,30)
dat1
rnorm(20)
dat1=rep(1.0,30);dat1[6:24]=rnorm(20)
dat1=rep(1.0,30);dat1[6:25]=rnorm(20);
dat2=rep(1.0,30);dat2[6:25]=rnorm(20);
dat1=rep(0,30);dat1[6:25]=rnorm(20);
dat2=rep(0,30);dat2[6:25]=rnorm(20);
plot(rbind(dat1,dat2),type="l")
rbind(dat1,dat2)
plot(cbind(dat1,dat2),type="l")
cbind(dat1,dat2)
plot(c(dat1,dat2),type="l")
dat = c(dat1,dat2);
dat
t(t(dat))
?write.table
write.table(dat, "test.csv")
write.table(dat, "test.csv",row.names = F)
plot(c(dat1,dat2),type="l")
#
require(reshape)
require(plyr)
require(stringr)
#
require(ggplot2)
require(Cairo)
require(scales)
require(RColorBrewer)
require(grid)
require(gridExtra)
require(lattice)
data=read.table("../data/cbf/CBF_TRAIN")
View(data)
uniq(data$V1)
unique(data$V1)
tmp=data[data$V1==1,]
tmp=(data[data$V1==1,])[,-1]
plot(tmp[1,],type="l")
tmp=(data[data$V1==1,])[,-1]
plot(tmp[1,],type="l")
tmp[1,]
plot(as.numeric(tmp[1,]),type="l")
tmp=(data[data$V1==2,])[,-1]
plot(as.numeric(tmp[1,]),type="l")
bell=(data[data$V1==2,])[,-1]
plot(as.numeric(bell[1,]),type="l")
funnel=(data[data$V1==3,])[,-1]
plot(as.numeric(funnel[1,]),type="l")
series = c(1,2,2,2,2,2,3,4,4,4,4,5,5,5,5,6,6,6,7,7,7,8,9,9,9,11,11,11,11,11)
starts = c(11,12,13,14,15,16,13,19,20,21,22,16,17,18,19,16,19,20,12,13,14,15,6,7,8,7,8,9,10,11)
stops = c(58,59,60,61,62,63,60,66,67,68,69,63,64,65,66,63,66,67,59,60,61,62,53,54,55,54,55,5657,58,)
stops = c(58,59,60,61,62,63,60,66,67,68,69,63,64,65,66,63,66,67,59,60,61,62,53,54,55,54,55,56,57,58)
df=data.frame(series,starts,stops)
View(df)
series_idx=1
series=cylinders[series_idx+1]
series=cylinder[series_idx+1]
data=read.table("../data/cbf/CBF_TRAIN")
unique(data$V1)
cylinder=(data[data$V1==1,])[,-1]
plot(as.numeric(cylinder[1,]),type="l")
bell=(data[data$V1==2,])[,-1]
plot(as.numeric(bell[1,]),type="l")
funnel=(data[data$V1==3,])[,-1]
plot(as.numeric(funnel[1,]),type="l")
series = c(1,2,2,2,2,2,3,4,4,4,4,5,5,5,5,6,6,6,7,7,7,8,9,9,9,11,11,11,11,11)
starts = c(11,12,13,14,15,16,13,19,20,21,22,16,17,18,19,16,19,20,12,13,14,15,6,7,8,7,8,9,10,11)
stops = c(58,59,60,61,62,63,60,66,67,68,69,63,64,65,66,63,66,67,59,60,61,62,53,54,55,54,55,56,57,58)
df=data.frame(series,starts,stops)
series_idx=1
series=cylinder[series_idx+1]
df[df$series==series_idx+1,]
segments=ldply(df[df$series==series_idx+1,],function(x){series[x[2]:x[3]]}
)
segments=ldply(df[df$series==series_idx+1,],function(x){series[x[2]:x[3]]})
str(series)
series=cylinder[series_idx+1]
View(series)
series=cylinder[series_idx+1,]
segments=ldply(df[df$series==series_idx+1,],function(x){series[x[2]:x[3]]})
str(series)
View(segments)
segments=dlply(df[df$series==series_idx+1,],function(x){series[x[2]:x[3]]})
?dlply
df[df$series==series_idx+1,]
segments=dlply(df[df$series==series_idx+1,],.starts,function(x){series[x[2]:x[3]]})
segments=dlply(df[df$series==series_idx+1,],."starts",function(x){series[x[2]:x[3]]})
segments=dlply(df[df$series==series_idx+1,],.starts,.fun=function(x){series[x[2]:x[3]]})
df[df$series==series_idx+1,]
str(df[df$series==series_idx+1,])
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){series[x[2]:x[3]]})
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){print(x)})
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){print(x)series[x$starts:x$stops]})
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){print(series[x$starts:x$stops])})
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){series[x$starts:x$stops]})
plot(as.numeric(series,type="l")
plot(series,type="l")
plot(series,type="l")
plot(as.numeric(series),type="l")
?laply
lapply(segments,lines(x))
lapply(segments,.fun=function(x){print(x)})
lapply(segments,function(x){print(x)})
lapply(segments,lines(as.numeric(x)))
lapply(segments,function(x){lines(as.numeric(x),col="red")})
c(1:10)
series=cylinder[series_idx+1,]
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){
data.frame(x=c(x$starts:x$stops),y=series[x$starts:x$stops]})
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){
data.frame(x=c(x$starts:x$stops),y=series[x$starts:x$stops])})
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){
data.frame("x"=c(x$starts:x$stops),"y"=series[x$starts:x$stops])})
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){
data.frame("x"=c(x$starts:x$stops),"y"=as.numeric(series[x$starts:x$stops]))})
plot(as.numeric(series),type="l")
lapply(segments,function(x){lines(x=x$x,y=x$y,col="red")})
lapply(segments,function(x){lines(x=x$x,y=x$y,col="red",size=2)})
plot(as.numeric(series),type="l")
plot(as.numeric(series),type="l")
lapply(segments,function(x){lines(x=x$x,y=x$y,col="red",size=2)})
lapply(segments,function(x){lines(x=x$x,y=x$y,col="red",lwd=2)})
plot(as.numeric(series),type="l")
lapply(segments,function(x){lines(x=x$x,y=x$y,col="red",lwd=2)})
series = c(28,71,213)
starts = c(55,72,45)
stops = c(104,121,94)
series_idx=212
series=cylinder[series_idx+1,]
data=read.table("../data/cbf/CBF_TEST")
unique(data$V1)
cylinder=(data[data$V1==1,])[,-1]
plot(as.numeric(cylinder[1,]),type="l")
bell=(data[data$V1==2,])[,-1]
plot(as.numeric(bell[1,]),type="l")
funnel=(data[data$V1==3,])[,-1]
plot(as.numeric(funnel[1,]),type="l")
#Class key: 1
#pattern="aeee aeee"; weight=0.23291
#0: [10]
#1: [11, 12, 13, 14, 15]
#2: [12]
#3: [18, 19, 20, 21]
#4: [15, 16, 17, 18]
#5: [15, 18, 19]
#6: [11, 12, 13]
#7: [14]
#8: [5, 6, 7]
#10: [6, 7, 8, 9, 10]
series = c(1,2,2,2,2,2,3,4,4,4,4,5,5,5,5,6,6,6,7,7,7,8,9,9,9,11,11,11,11,11)
starts = c(11,12,13,14,15,16,13,19,20,21,22,16,17,18,19,16,19,20,12,13,14,15,6,7,8,7,8,9,10,11)
stops = c(58,59,60,61,62,63,60,66,67,68,69,63,64,65,66,63,66,67,59,60,61,62,53,54,55,54,55,56,57,58)
df=data.frame(series,starts,stops)
series_idx=1
series=cylinder[series_idx+1,]
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){
data.frame("x"=c(x$starts:x$stops),"y"=as.numeric(series[x$starts:x$stops]))})
plot(as.numeric(series),type="l")
lapply(segments,function(x){lines(x=x$x,y=x$y,col="red",lwd=2)})
series = c(28,71,213)
starts = c(55,72,45)
stops = c(104,121,94)
df=data.frame(series,starts,stops)
series_idx=212
series=cylinder[series_idx+1,]
series
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){
data.frame("x"=c(x$starts:x$stops),"y"=as.numeric(series[x$starts:x$stops]))})
plot(as.numeric(series),type="l")
lapply(segments,function(x){lines(x=x$x,y=x$y,col="red",lwd=2)})
series = c(1,1,1,1,15,21,24,24,25,35,37,37,37,37,37,37,37,37,38,38,40,40,40,40,43)
starts = c(43,44,45,46,53,20,40,44,82,42,30,70,71,72,73,74,75,76,33,34,38,39,40,41,38)
stops = c(90,91,92,93,100,67,87,91,129,89,77,117,118,119,120,121,122,123,80,81,85,86,87,88,85)
df=data.frame(series,starts,stops)
series_idx=36
series=cylinder[series_idx+1,]
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){
data.frame("x"=c(x$starts:x$stops),"y"=as.numeric(series[x$starts:x$stops]))})
plot(as.numeric(series),type="l")
lapply(segments,function(x){lines(x=x$x,y=x$y,col="red",lwd=2)})
series = c(4,6,6,7,7,7,7,7,7,7,7,7,7,7,10,12,12,12,12,12,12,12,12,12,12,12,16,16,16,22,22,22,22,22,22,22,22,22,22,22,22,22,22,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,30,30,30,30,30,30,30)
starts = c(70,40,41,14,15,16,17,18,19,20,21,22,23,24,59,14,28,29,30,31,32,33,34,35,36,37,9,10,11,31,32,33,34,58,59,60,61,62,63,64,65,66,67,61,62,63,64,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,12,13,14,15,16,17,18)
stops = c(123,93,94,67,68,69,70,71,72,73,74,75,76,77,112,67,81,82,83,84,85,86,87,88,89,90,62,63,64,84,85,86,87,111,112,113,114,115,116,117,118,119,120,114,115,116,117,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,65,66,67,68,69,70,71)
df=data.frame(series,starts,stops)
df=data.frame(series,starts,stops)
series_idx=27
series=bell[series_idx+1,]
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){
data.frame("x"=c(x$starts:x$stops),"y"=as.numeric(series[x$starts:x$stops]))})
plot(as.numeric(series),type="l")
lapply(segments,function(x){lines(x=x$x,y=x$y,col="red",lwd=2)})
data=read.table("../data/OSULeaf//OSULeaf_TEST")
#
require(reshape)
require(plyr)
require(stringr)
#
require(ggplot2)
require(Cairo)
require(scales)
require(RColorBrewer)
require(grid)
require(gridExtra)
require(lattice)
unique(data$V1)
series = c(8,8,8,8,8,8,8,17,17,18)
starts = c(153,154,155,156,157,158,159,29,30,36)
stops = c(276,277,278,279,280,281,282,152,153,159)
df=data.frame(series,starts,stops)
series_idx=7
class_id=1
series_idx=7
series=((data[data$V1=class_id,])[,-1])[series_idx+1,]
data[data$V1=class_id,]
series=((data[data$V1==class_id,])[,-1])[series_idx+1,]
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){
data.frame("x"=c(x$starts:x$stops),"y"=as.numeric(series[x$starts:x$stops]))})
plot(as.numeric(series),type="l")
lapply(segments,function(x){lines(x=x$x,y=x$y,col="red",lwd=2)})
series_idx=16
series=((data[data$V1==class_id,])[,-1])[series_idx+1,]
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){
data.frame("x"=c(x$starts:x$stops),"y"=as.numeric(series[x$starts:x$stops]))})
plot(as.numeric(series),type="l")
lapply(segments,function(x){lines(x=x$x,y=x$y,col="red",lwd=2)})
series_idx=17
series=((data[data$V1==class_id,])[,-1])[series_idx+1,]
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){
data.frame("x"=c(x$starts:x$stops),"y"=as.numeric(series[x$starts:x$stops]))})
plot(as.numeric(series),type="l")
lapply(segments,function(x){lines(x=x$x,y=x$y,col="red",lwd=2)})
series = c(9)
starts = c(17)
stops = c(149)
df=data.frame(series,starts,stops)
class_id=2
series_idx=8
series=((data[data$V1==class_id,])[,-1])[series_idx+1,]
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){
data.frame("x"=c(x$starts:x$stops),"y"=as.numeric(series[x$starts:x$stops]))})
plot(as.numeric(series),type="l")
lapply(segments,function(x){lines(x=x$x,y=x$y,col="red",lwd=2)})
log(2)
log(5)
log(6)
?log
log(2,2)
log(3,2)
log(4,2)
log(10,2)
data=read.table("../data/Passgraph//Passgraph_TEST")
series = c(10,10,10,11,11,24,31,31,31,37,37,50,50,62,62,63,63)
starts = c(35,36,37,39,40,52,34,35,36,40,41,42,43,29,30,31,32)
stops = c(176,177,178,180,181,193,175,176,177,181,182,183,184,170,171,172,173)
df=data.frame(series,starts,stops)
class_id=4
series_idx=9
series=((data[data$V1==class_id,])[,-1])[series_idx+1,]
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){
data.frame("x"=c(x$starts:x$stops),"y"=as.numeric(series[x$starts:x$stops]))})
plot(as.numeric(series),type="l")
lapply(segments,function(x){lines(x=x$x,y=x$y,col="red",lwd=2)})
series = c(1,3,3,7,7,7,9,9,9,10,10,16,16,28,31,31,31,32,32,32,32,37,37)
starts = c(214,219,220,214,215,216,221,222,223,224,225,217,218,217,220,221,222,218,219,220,221,221,222)
stops = c(353,358,359,353,354,355,360,361,362,363,364,356,357,356,359,360,361,357,358,359,360,360,361)
df=data.frame(series,starts,stops)
class_id=4
series_idx=31
series=((data[data$V1==class_id,])[,-1])[series_idx+1,]
segments=dlply(df[df$series==series_idx+1,],.(starts),.fun=function(x){
data.frame("x"=c(x$starts:x$stops),"y"=as.numeric(series[x$starts:x$stops]))})
plot(as.numeric(series),type="l")
lapply(segments,function(x){lines(x=x$x,y=x$y,col="red",lwd=2)})
m=matrix(c(0,1,0,0,0.5,0,0,0,0.5,0,0,1,0,0,1,0), ncol=4,byrow=T)
m
v=c(0.25,0.25,0.25,0.25)
v = m %*% v
v
v = m %*% v
v = m %*% v
v = m %*% v
v = m %*% v
v
v = m %*% v
v = m %*% v
v = m %*% v
v = m %*% v
v
v=c(0.25,0.25,0.25,0.25)
for(i in c(1:10)){
v = m %*% v
v
}
v=c(0.25,0.25,0.25,0.25)
for(i in c(1:10)){
v = m %*% v
print(paste(v))
}
m=matrix(c(0,1,0,0,0.5,0,0,0,0.5,0,0,1,0,0,1,0), ncol=4,byrow=T)
m
m=0.7*m
v=c(0.25,0.25,0.25,0.25)
for(i in c(1:10)){
v = m %*% v
print(paste(v))
}
m
m=matrix(c(0,1,0,0,0.5,0,0,0,0.5,0,0,1,0,0,1,0), ncol=4,byrow=T)
m
m=0.7*m
m
m=matrix(c(0,0.5,1,0,1/3,0,0,1/2,1/3,0,0,1/2,1/3,1/2,0,0,), ncol=4,byrow=T)
m=matrix(c(0,0.5,1,0,1/3,0,0,1/2,1/3,0,0,1/2,1/3,1/2,0,0), ncol=4,byrow=T)
m
m
v=c(0.25,0.25,0.25,0.25)
for(i in c(1:10)){
v = m %*% v
print(paste(v))
}
9/24
15/48
3/9
for(i in c(1:20)){
v=c(0.25,0.25,0.25,0.25)
for(i in c(1:20)){
v = m %*% v
print(paste(v))
}
}
v=c(0.25,0.25,0.25,0.25)
for(i in c(1:20)){
v = m %*% v
print(paste(v))
}
m=matrix(c(0,1,0,0,0.5,0,0,0,0.5,0,0,1,0,0,1,0), ncol=4,byrow=T)
m
v=c(0.25,0.25,0.25,0.25)
for(i in c(1:10)){
v = 0.7 * m %*%  v + 0.3 * 1/2 * c(0.66666,0.33333,0,0)
print(paste(v))
}
0.3 * 1/2 * c(0.66666,0.33333,0,0)
v=t(c(0.25,0.25,0.25,0.25))
v
v=t(t(c(0.25,0.25,0.25,0.25)))
v
m %*% v
0.7 * m %*% v
m=matrix(c(0,1,0,0,0.5,0,0,0,0.5,0,0,1,0,0,1,0), ncol=4,byrow=T)
m
v=t(t(c(0.25,0.25,0.25,0.25)))
for(i in c(1:10)){
v = 0.7 * m %*% v + 0.3 * 1/2 * t(t(c(0.66666,0.33333,0,0)))
print(paste(v))
}
m=matrix(c(0,1,0,0,0.5,0,0,0,0.5,0,0,1,0,0,1,0), ncol=4,byrow=T)
m
v=t(t(c(0.25,0.25,0.25,0.25)))
for(i in c(1:10)){
v = 0.7 * m %*% v + 0.3 * 1/2 * t(t(c(2,1,0,0)))
print(paste(v))
}
for(i in c(1:20)){
v = 0.7 * m %*% v + 0.3 * 1/2 * t(t(c(2,1,0,0)))
print(paste(v))
}
m=matrix(c(0,0.5,1,0,1/3,0,0,1/2,1/3,0,0,1/2,1/3,1/2,0,0), ncol=4,byrow=T)
m
v=c(0.25,0.25,0.25,0.25)
for(i in c(1:20)){
v = 0.8 * m %*%  v + 1/5 * 1/2 * c(0,1,0,1)
print(paste(v))
}
54/210
m=matrix(c(0,1,0,0,0.5,0,0,0,0.5,0,0,1,0,0,1,0), ncol=4,byrow=T)
m
v=t(t(c(0.25,0.25,0.25,0.25)))
for(i in c(1:20)){
v = 0.7 * m %*% v + 0.3 * 1/2 * t(t(c(2,1,0,0)))
print(paste(v))
}
0.257142855964809+0.280952381345064+0.180952381345064+0.280952381345064
0.3576+0.3576/2
log(2,2)
log(1,2)
